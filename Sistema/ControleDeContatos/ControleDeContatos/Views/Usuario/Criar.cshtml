@using ControleDeContatos.Enums
@model UsuarioModel
@{
    ViewData["Title"] = "Criar Usuário";
}

<div class='text-center'>

    <h1 class="display-4">Cadastrar Usuário </h1>
     
</div>

<form asp-controller="Usuario" asp-action="Criar" method="post">

    <div class="form-group">
        <label for="name">Nome</label>
        <input type="text" asp-for="Nome" class="form-control" placeholder="Digite o nome do usuário">
        @Html.ValidationMessageFor(x=>x.Nome)
    </div>

    <div class="form-group">
        <label for="email" class="form-label">E-mail</label>
        <input type="text" asp-for="Email" class="form-control" placeholder="Digite o e-mail do usuário">
        @Html.ValidationMessageFor(x => x.Email)
    </div>

    <div class="form-group">
        <label for="nome" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control" placeholder="Digite o Login do usuário">
        @Html.ValidationMessageFor(x => x.Login)
    </div>
    <div class="form-group">
        <label for="nome" class="form-label">Perfil</label>
        <select asp-for="Perfil" class="form-control">
            <option value="">Selecione</option>
            <option value="@PerfilEnum.Admin"> Administrador</option>
            <option value="@PerfilEnum.Padrao"> Padrão</option>
        </select>
        @Html.ValidationMessageFor(x => x.Perfil)
    </div>

    <div class="form-group">
        <label for="nome" class="form-label">Senha</label>
        <input type="password" asp-for="Senha" class="form-control" placeholder="Digite a senha do usuário">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>

    <button type="submit" class="btn btn-primary">Adicionar</button>
    <a class="btn btn-secondary" asp-controller="Usuario" asp-action="Index" role="button">Voltar</a>
</form>